# [PackageDev] target_format: plist, ext: tmLanguage
--- #Minecraft Code.YAML-tmLanguage
name: Minecraft Command Code
scopeName: source.mcc
fileTypes: [mcc]
uuid: 0da65be4-5aac-4b6f-8071-1aadb970b8d9

patterns:
- include: '#comment'
- include: "#smelt"
- include: '#nbt-json-array'
- include: '#string'
- include: '#entity-selector'
- include: '#commands'
- include: '#operators'
- include: '#number'
- include: '#err-chars'

repository:
  comment:
    patterns:
    - match: '(//.*)$'
      captures:
       '1': {name: comment.line.mcc}
    - name: comment.block.mcc
      begin: '(/\*)'
      end: '(\*/)'
    - name: comment.line.mcc
      begin: '(!!)'
      end: '(!!)'


  smelt:
    patterns:
    - name: keyword.control.mcc
      match: '(!\w+|# .+$)'
    - include: '#smelt-json-array'
    - name: entity.name.mcc
      match: '(\$\{\w+\}|\$\w+)'

  smelt-json-array:
    begin: '(\>\{)'
    beginCaptures:
      '1': {name: punctionation.definition.mcc}
    patterns:
    - begin: '(\"executeAs\")\s*:\s*(\")'
      beginCaptures:
        '1': {name: string.quoted.mcc}
        '2': {name: string.quoted.mcc}
      patterns:
      - include: '#entity-selector'
      - include: '#err-chars'
      end: '(\"),?'
      endCaptures:
        '1': {name: string.quoted.mcc}
    - match: '(\"type\")\s*:\s*(\"(?:(?:impulse|repeating)(?:-chain)?|chain)\"),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: constant.language.mcc}
    - match: '(\"(?:auto|conditional)\")\s*:\s*(true|false),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: constant.language.mcc}
    - match: '(\"markerTag\")\s*:\s*(\"(?:[^\\\"]|(\\.))*\")'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: string.quoted.mcc}
    - include: "err-chars"
    - include: "json-err"
    end: '(\})'
    endCaptures:
      '1': {name: punctuation.definition.mcc }

  nbt-json-array: #Json Matching is second because it can include selectors, commands, and other syntax matched by other areas of the code
    name: mcc.nbt-json-array
    begin: '([\{\[])'
    beginCaptures:
      '1': {name: punctuation.definition.mcc}
    patterns:
    - include: '#entity-data'
    - include: '#hover-event-json'
    - include: '#click-event-json'
    - include: '#score-json'
    - include: '#pages-json'
    - include: '#json-attributes'
    - include: '#json-string'
    - include: '$self'
    - include: '#json-err'
    - include: '#err-chars'
    end: '([\}\]]),?'
    endCaptures:
      '1': {name: punctuation.definition.mcc}

  json-attributes:
    name: mcc.json-attributes
    patterns:
    - match: '(((?:\\+)?\"?)(?:text|insertion|title|author|translate)\2)\s*:\s*((?:\"(?:[^\\\"]|\\.)*\")|(?:\\\"(?:[^\\\"]|\\[^\"])*\\\")),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string}
        '3': {name: string.quoted.mcc}
                   #Matching for the selector: directive
    - name: json.string.selector
      begin: '(((?:\\+)?\"?)(?:selector|markerTag)\2)\s*:\s*(\2)'
      beginCaptures:
        '1': {name: string.quoted.mcc} #The quotes
        '2': {name: punctuation.definition.string} #'Selector'
        '3': {name: string.quoted.mcc}
      patterns:
      - include: '#entity-selector'
      - include: '#err-chars'
      end: '(\\?"),?'
      endCaptures:
        '1': {name: string.quoted.mcc}
    - match: '(((?:\\+)?\")color\2)\s*:\s*(\2(?:none|black|dark_blue|dark_green|dark_aqua|dark_red|dark_purple|gold|gray|dark_gray|blue|green|aqua|red|light_purple|yellow|white)\2),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string}
        '3': {name: constant.language.mcc}
    - match: '(((?:\\+)?\")(?:bold|italic|underline|strikethrough|obfuscated|conditional|auto)\2)\s*:\s*(\2?)(true|false)\3,?' #Booleans
      captures:
        '1': {name: string.quoted.mcc} #Quotes
        '2': {name: punctuation.definition.string}
        '3': {name: punctuation.definition.string}
        '4': {name: constant.language.mcc} #Boolean value
    - name: json.array.with-extra.mcc
      begin: '(((?:\\+)?\")(?:with|extra)\2)\s*:\s*([\[\{])'
      beginCaptures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: punctuation.definition.mcc}
      patterns:
      - include: '#hover-event-json'
      - include: '#click-event-json'
      - include: '#score-json'
      - include: '#pages-json'
      - include: '#entity-data'
      - include: '#json-attributes'
      - include: '#json-string'
      - include: '#nbt-json-array'
      - include: '#json-err'
      - include: '#err-chars'
      end: '([\]\}]),?'
      captures:
        '1': {name: punctuation.definition.mcc}
    - match: '(((?:\\+)?\")type\2)\s*:\s*(\2?)(llamas|evocation_fangs|lightning_bolt|llama_spit|parrot|(?:chest|commandblock|furnace|hopper|spawner|tnt)_|(?:minecart)|(?:(?:skeleton|zombie)_|)(?:horse)|(?:illusion|evocation|vindication)_illager|(?:zombie)(?:_(?:pigman|villager)|)|area_effect_cloud|armor_stand|arrow|bat|blaze|boat|cave_spider|chicken|cow|creeper|donkey|dragon_fireball|egg|elder_guardian|ender_(?:pearl|crystal|dragon)|enderman|endermite|eye_of_ender_signal|falling_block|fireball|fireworks_rocket|ghast|giant|guardian|husk|item_frame|item|leash_knot|magma_cube|mooshroom|mule|ocelot|painting|pig|polar_bear|potion|rabbit|sheep|shulker_bullet|shulker|silverfish|skeleton_horse|skeleton|slime|small_fireball|snowball|snowman|spectral_arrow|spider|squid|stray|tnt|vex|villager_golem|villager|witch|wither_skeleton|wither|wolf|xp_(?:bottle|orb))(\3),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: punctuation.definition.string.mcc}
        '4': {name: constant.language.mcc}
        '5': {name: punctuation.definition.string.mcc}


  hover-event-json:
    name: mcc.hover-event
    begin: '(((?:\\+)?\")hoverEvent\2)\s*:\s*([\[\{])\s*'
    beginCaptures:
      '1': {name: string.quoted.mcc}
      '2': {name: punctuation.definition.string.mcc}
      '3': {name: punctuation.definition.mcc}  #The open bracket
    patterns:
    - match: '(((?:\\+)?\")action\2)\s*:\s*(\2)(show_(?:text|item|entity|achievement))(\2),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: punctuation.definition.string.mcc}
        '4': {name: constant.language.mcc}
        '5': {name: punctuation.definition.string.mcc}
    - name: json.hover-event.value.mcc
      begin: '(((?:\\+)?\")value\2)\s*:\s*\2?([\[\{])' #This one is for when there is Json in the value
      beginCaptures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: punctuation.definition.mcc}
      patterns:
      - include: '#hover-event-json'
      - include: '#click-event-json'
      - include: '#score-json'
      - include: '#pages-json'
      - include: '#entity-data'
      - include: '#json-attributes'
      - include: '#json-string'
      - include: '#nbt-json-array'
      - include: '#json-err'
      - include: '#err-chars'
      end: '([\]\}])((?:\\+)?\")?,?'
      endCaptures:
        '1': {name: punctuation.definition.mcc}
    - match: '(((?:\\+)?\")value\2)\s*:\s*((?:\"(?:[^\\\"]|\\.)*\")|(?:\\\"(?:[^\\\"]|\\(?:\\\\)+\"|\\[^\"])*\\\")),?' #TODO: Make it check for json in the string
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: string.quoted.mcc}
        '4': {name: constant.numeric.mcc}
    - include: '#json-err'
    - include: '#err-chars'
    end: '([\]\}]),?'
    endCaptures:
      '1': {name: punctuation.definition.mcc}

  click-event-json:
    name: mcc.click-event
    begin: '(((?:\\+)?\")clickEvent\2)\s*:\s*([\[\{])'
    beginCaptures:
      '1': {name: string.quoted.mcc}
      '2': {name: punctuation.definition.string.mcc}
      '3': {name: punctuation.definition.mcc}  #The open bracket
    patterns:
    - match: '(((?:\\+)?\")action\2)\s*:\s*(\2)((?:run|suggest)_command|open_url|change_page)(\2),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: punctuation.definition.string.mcc}
        '4': {name: constant.language.mcc}
        '5': {name: punctuation.definition.string.mcc}
    - name: json.click-event.value.mcc
      begin: '(((?:\\+)?\")value\2)\s*:\s*\2?([\[\{])' #This one is for when there is Json in the value
      beginCaptures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: punctuation.definition.mcc}
      patterns:
      - include: '#hover-event-json'
      - include: '#click-event-json'
      - include: '#score-json'
      - include: '#pages-json'
      - include: '#entity-data'
      - include: '#json-attributes'
      - include: '#json-string'
      - include: '#nbt-json-array'
      - include: '#json-err'
      - include: '#err-chars'
      end: '([\]\}])((?:\\+)?\")?,?'
      endCaptures:
        '1': {name: punctuation.definition.mcc}
    - name: json.attribute.command.mcc
      begin: '(((?:\\+)?\")value\2)\s*:\s*(\2)'
      beginCaptures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: string.quoted.mcc}
        '4': {name: keyword.control.mcc}
      patterns:
      - include: '#nbt-json-array'
      - include: '#string'
      - include: '#entity-selector'
      - include: '#commands'
      - include: '#operators'
      - include: '#number'
      - include: '#err-chars'
      end: '((?:\\+)?\"),?'
      endCaptures:
        '1': {name: string.quoted.mcc}
    - match: '(((?:\\+)?\")value\2)\s*:\s*(?:((?:\"(?:[^\\\"]|\\.)*\")|(?:\\\"(?:[^\\\"]|\\(?:\\\\)+\"|\\[^\"])*\\\"))|(\d+)),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: string.quoted.mcc}
        '4': {name: constant.numeric.mcc}
    end: '([\]\}]),?'
    endCaptures:
      '1': {name: punctuation.definition.mcc}

  score-json:
    name: mcc.score-json
    begin: '(((?:\\+)?\")score\2)\s*:\s*([\[\{])'
    beginCaptures:
      '1': {name: string.quoted.mcc}
      '2': {name: punctuation.definition.string.mcc}
      '3': {name: punctuation.definition.mcc}  #The open bracket
    patterns:
    - name: json.score.name
      begin: '(((?:\\+)?\")name\2)\s*:\s*(\2)'
      beginCaptures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: punctuation.definition.string.mcc}
      patterns:
      - match: '([\w-]+|\*)'
        captures:
          '1': {name: string.quoted.mcc}
      - include: '#entity-selector'
      - include: '#err-chars'
      end: '((?:\\+)?\"),?'
      endCaptures:
        '1': {name: punctuation.definition.string.mcc}
    - match: '(((?:\\+)?\")objective\2)\s*:\s*(\2[\w-]+\2),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
        '3': {name: string.quoted.mcc}
    - include: '#json-attributes'
    end: '([\]\}]),?'
    endCaptures:
      '1': {name: punctuation.definition.mcc}

  pages-json:
    name: mcc.pages-json
    begin: '(((?:\\+)?\")pages\2)\s*:\s*([\[\{])'
    beginCaptures:
      '1': {name: string.quoted.mcc}
      '2': {name: punctuation.definition.string.mcc}
      '3': {name: punctuation.definition.mcc}  #The open bracket
    patterns:
    - name: json.array.pages.page
      begin: '(\")([\{\[])'
      beginCaptures:
        '1': {name: punctuation.definition.string.mcc}
        '2': {name: punctuation.definition.mapping.mcc}
      patterns:
      - include: '#hover-event-json'
      - include: '#click-event-json'
      - include: '#score-json'
      - include: '#pages-json'
      - include: '#entity-data'
      - include: '#json-attributes'
      - include: '#nbt-json-array'
      - include: '#json-string'
      - include: '#json-err'
      - include: '#err-chars'
      end: '([\]\}])(\"),?'
      endCaptures:
        '1': {name: punctuation.definition.mapping.mcc}
        '2': {name: punctuation.definition.string.mcc}
    - match: '((?:\"(?:[^\\\"]|\\.)*\")|(?:\\\"(?:[^\\\"]|\\(?:\\\\)+\"|\\[^\"])*\\\")),?'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: punctuation.definition.string.mcc}
    end: '([\]\}]),?'
    endCaptures:
      '1': {name: punctuation.definition.mcc}

  entity-data: #Any data tag that can be used to describe an entity or items is here
    name: mcc.entity-data
    patterns:
    - match: '(?:Pos|Motion|direction|power|Body|(?:Left|Right)(?:Arm|Leg)|Head)\s*:\s*(\[)(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?),\s*(-?\d+(?:\.\d+)?\s*)(\]),?'
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: constant.numeric.mcc}
        '3': {name: constant.numeric.mcc} #The numbers
        '4': {name: constant.numeric.mcc}
        '5': {name: punctuation.definition.mapping.mcc}
    - match: '(Rotation|RightArm|LeftArm|Body|Head|LeftLeg|RightLeg)\s*:\s*(\[)(?:(?:(\d+):)?(-?\d+(?:\.\d+)?[f|F]?),\s*)(?:(?:(?:(\d+):)?(-?\d+(?:\.\d+)?[f|F]?),\s*))?(?:(?:(\d+):)?(-?\d+(?:\.\d+)?[f|F]?\s*))?(\]),?'
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: punctuation.definition.mapping.mcc}
        '3': {name: constant.numeric.mcc}
        '4': {name: constant.numeric.mcc}
        '5': {name: constant.numeric.mcc}
        '6': {name: constant.numeric.mcc}
        '7': {name: constant.numeric.mcc}
        '8': {name: constant.numeric.mcc}
        '9': {name: punctuation.definition.mapping.mcc}
    - match: '(Johnny|CanPickUpLoot|LeftHanded|OnGround|Invulnerable|CustomNameVisible|Silent|Glowing|BatFlags|IsChickenJockey|Powered|ignited|PlayerSpawned|Bred|ChestedHorse|EatingHaystack|HasReproduced|Tame|Saddle|SkeletonTrap|Elder|wasOnGround|IsBaby|CanBreakDoors|Sheared|Willing|rewardExp|PlayerCreated|Angry|player|inGround|Ambient|ShowParticles|CustomDisplayTile|Enabled|TrackOutput|DropItem|HurtEntities|Marker|Invisible|NoBasePlate|Gravity|ShowArms|Small|ShowBottom|Flicker|Trail|powered|auto|ExactTeleport|extending|Unbreakable|resolved|isPublic|map_is_scaling|NoGravity|Count|PersistenceRequired|NoAI)\s*:\s*([01]b?),?' #Boolean
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: constant.numeric.mcc}
    - match: '(FallDistance|damage|Push[XZ]|FallHurtAmount|DurationOnUse|Radius(?:OnUse|PerTick)?|ItemDropChance|T[XYZ]D|progress|Amount|[xz]|rot)\s*:\s*(-?\d*(?:\.\d+)),?' #Decimals
      captures:
        '1': {name: string.unquoted.mcc }
        '2': {name: constant.numeric.mcc}
    - match: '(CustomPotionColor|Amount|Fire|Air|Dimension|PortalCooldown|UUIDMost|UUIDLeast|EggLayTime|InLove|Age|ForcedAge|ExplosionRadius|Fuse|DragonPhase|carried(?:Data)?|Life[tT]ime|Temper|Type|Variant|SkeletonTrapTime|ExplosionPower|Size|CatType|ConversionTime|(?:Villager)?Profession|Anger|RabbitType|MoreCarrotTicks|Color|Peek|AttachFace|AP[XYZ]|SkeletonType|Riches|Career(?:Level)?|(?:max)?Uses|Invul|CollarColor|[xyz]Tile|in|shake|inData|pickup|life|[Ii]d|Amplifier|Duration|life|Age|Health|PickupDelay|Count|Damage|Value|Display(?:Data|Offset)|LootTableSeed|Fuel|Weight|Spawn(?:Count|Range)|Delay|(?:Min|Max)SpawnDelay|MaxNearbyEntities|RequiredPlayerRange|TNTFuse|TransferCooldown|TileID|Data|Time|FallHurtMax|ReapplicationDelay|WaitTime|DisabledSlots|(?:Tile)?[X-Z]|Type|Flight|Facing|ItemRotation|[Litp]|Steps|Base|Levels|Primary|Secondary|BrewTime|Fuel|OutputSignal|(?:Burn|Cook)Time|CookTimeTotal|note|block(?:Id|Data)|facing|Record|SkullType|Rot|Slot|lvl|RepairCost|Operation|color|HideFlags|generation|timestamp|type|SuccessCount|ZombieType|ParticleParam[1|2])\s*:\s*(-?\d+s?),?' #Whole numbers
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: constant.numeric.mcc}
    - match: '(Team|Attributes|CustomName|(?:Affected(?:Blocks|Entities|Items)|QueryResult|SuccessCount)(?:Objective|Name)|OwnerName|OwnerUUID|HurtBy|inTile|Potion|Owner|Thrower|Type|DisplayTile|LootTable|EntityId|LastOutput|Block|Particle|Motive|id?|Pattern|Lock|ExtraType|Signature|Value|AttributeName|Name|Slot|SkullOwner|profileId|profileName|url)\s*:\s*([^,}]+),?' #String
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: string.quoted.mcc}
    - name: json.attribute.command.mcc
      begin: '(Command)\s*:\s*((?:\\+)?\")'
      beginCaptures:
        '1': {name: string.unquoted.mcc}
        '2': {name: string.quoted.mcc }
      patterns:
      - name: json.attribute.command.json.mcc
        begin: '([\{\[])\s*'
        beginCaptures:
          '1': {name: punctuation.definition.mcc}
        patterns:
        - include: '#hover-event-json'
        - include: '#click-event-json'
        - include: '#score-json'
        - include: '#pages-json'
        - include: '#entity-data'
        - include: '#json-attributes'
        - include: '#json-string'
        - include: '$self'
        - include: '#json-err'
        - include: '#err-chars' #Should be last
        end: '([\}\]]),?' #Make sure to match square and curly brackets
        endCaptures:
          '1': {name: punctuation.definition.mcc}
      - include: '#commands'
      - include: '#entity-selector'
      - include: '#number'
      end: '((?:\\+)?\"),?'
      endCaptures:
        '1': {name: string.quoted.mcc}
    - name: json.attribute.texts.mcc
      begin: '(Text[1-4])\s*:\s*((?:\\+)?\")'
      beginCaptures:
        '1': {name: string.unquoted.mcc}
        '2': {name: string.quoted.mcc }
      patterns:
      - name: json.attribute.command.json.mcc
        begin: '([\{\[])\s*'
        beginCaptures:
          '1': {name: punctuation.definition.mcc}
        patterns:
        - include: '#hover-event-json'
        - include: '#click-event-json'
        - include: '#score-json'
        - include: '#pages-json'
        - include: '#entity-data'
        - include: '#json-attributes'
        - include: '#json-string'
        - include: '$self'
        - include: '#json-err'
        - include: '#err-chars' #Should be last
        end: '([\}\]]),?' #Make sure to match square and curly brackets
        endCaptures:
          '1': {name: punctuation.definition.mcc}
      - include: '#commands'
      - include: '#entity-selector'
      - include: '#number'
      end: '((?:\\+)?\"),?'
      endCaptures:
        '1': {name: string.quoted.mcc}
    - name: json.arrays.mcc
      begin: '(Entity|RootVehicle|Passengers|Tags|CommandStats|SelectedItem|Items?|ArmorItems?|SaddleItem|Inventory|Offers|Recipes|buyB?|sell|tag|CustomPotionEffects|Potion|SpawnPotentials|Properties|SpawnData|TileEntityData|Effects|[0-4]|Equipment|HandItems|Pose|BeamTarget|FireworksItem|Explosions?|Fireworks|Colors|FadeColors|Owner|Target|Patterns|ExitPortal|RecordItem|Textures|CanDestroy|CanPlaceOn|ench|StoredEnchantments|BlockEntityTag|AttributeModifiers|display|Lore|SkullOwner|textures|Value|SKIN|CAPE|EntityTag|Decorations)\s*:\s*([\[\{])' #Arrays/Lists
      beginCaptures:
        '1': {name: string.unquoted.mcc}
        '2': {name: punctuation.definition.mapping.mcc}
      patterns:
      - include: '#hover-event-json'
      - include: '#click-event-json'
      - include: '#score-json'
      - include: '#pages-json'
      - include: '#entity-data'
      - include: '#json-attributes'
      - include: '#json-string'
      - include: '#nbt-json-array'
      - include: '#json-err'
      - include: '#err-chars'
      end: '([\}\]]),?'
      endCaptures:
        '1': {name: punctuation.definition.mapping.mcc}

  commands:
    patterns:
    - match: '(?:\s|^|\b)\/?(recipe) (give)\b'
      captures:
        '1': {name: keyword.control.mcc}
        '2': {name: support.type.mcc}
    - name: keyword.control.mcc
      match: '(?:\s|^|\b)\/?(advancement|blockdata|clear|clone|defaultgamemode|difficulty|effect|enchant|entitydata|execute|fill|gamemode|gamerule|give|help|kill|list|locate|me|particle|playsound|replaceitem|say|scoreboard|searge|seed|setblock|setidletimeout|setworldspawn|spawnpoint|recipe|spreadplayers|stats|stopsound|summon|teleport|tellraw|tell|testforblocks|testforblock|testfor|time|title|toggledownfall|tp|trigger|weather|worldborder)\b'
    - name: support.type.mcc
      match: '\b(while|unless|actionbar|add|adventure|AffectedBlocks|AffectedEntities|AffectedItems|announceAdvancements|belowName|block|clear|color|commandBlockOutput|creative|day|deathCount|destroy|disableElytraMovementCheck|doDaylightCycle|doEntityDrops|doFireTick|doLimitedCrafting|doMobLoot|doMobSpawning|doTileDrops|doWeatherCycle|dummy|easy|empty|enable|entity|everything|false|food|from|gameLoopFunction|grant|hard|health|hollow|if|join|keepInventory|keep|leave|list|logAdminCommands|maxCommandChainLength|maxEntityCramming|mobGriefing|naturalRegeneration|night|normal|objectives|off|only|on|operation|option|outline|peaceful|playerKillCount|players|QueryResult|rain|randomTickSpeed|reducedDebugInfo|reload|remove|replace|reset|revoke|sendCommandFeedback|setdisplay|set|showDeathMessages|sidebar|spawnRadius|spectatorsGenerateChunks|spectator|start|stop|subtitle|SuccessCount|survival|tag|teams|test|through|thunder|times|totalKillCount|trigger|true|until)\b'
    - name: constant.language.mcc
      match: '\b((?:dark_)?(?:blue|green|aqua|red|purple|gray)|black|gold|light_purple|yellow|white|(?:chest|commandblock|furnace|hopper|spawner|tnt)_|(?:minecart)|llamas|evocation_fangs|lightning_bolt|llama_spit|parrot|(?:(?:skeleton|zombie)_|)(?:horse)|(?:illusion|evocation|vindication)_illager|(?:zombie)(?:_(?:pigman|villager)|)|area_effect_cloud|armor_stand|arrow|bat|blaze|boat|cave_spider|chicken|cow|creeper|donkey|dragon_fireball|egg|elder_guardian|ender_(?:pearl|crystal|dragon)|enderman|endermite|eye_of_ender_signal|falling_block|fireball|fireworks_rocket|ghast|giant|guardian|husk|item_frame|item|leash_knot|magma_cube|mooshroom|mule|ocelot|painting|pig|polar_bear|potion|rabbit|sheep|shulker_bullet|shulker|silverfish|skeleton_horse|skeleton|slime|small_fireball|snowball|snowman|spectral_arrow|spider|squid|stray|tnt|vex|villager_golem|villager|witch|wither_skeleton|wither|wolf|xp_(?:bottle|orb))\b'
    - match: '(function) ([a-z_1-9]+:)([a-z_1-9]+(?:\/[a-z_1-9]+)*)(\/?)'
      captures:
        '1': {name: keyword.control.mcc}
        '2': {name: support.type.mcc}
        '3': {name: string.unquoted.mcc}
        '4': {name: invalid.illegal}
    - match: '(minecraft:)([A-Za-z_-]+)'
      captures:
        '1': {name: support.type.mcc}
        '2': {name: string.unquoted.mcc}
    - match: '\b(slot\.([A-Za-z]+)\.((?:[A-Za-z]+)|(?:\d+)))\b'
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: constant.numeric}
        '3': {name: constant.numeric}
    - match: '\b(stat\.(animalsBred|armorCleaned|bannerCleaned|beaconInteraction|boatOneCm|brewingstandInteraction|cakeSlicesEaten|cauldronFilled|cauldronUsed|chestOpened|climbOneCm|craftingTableInteraction|crouchOneCm|damageDealt|damageTaken|deaths|dispenserInspected|diveOneCm|drop|dropperInspected|enderchestOpened|fallOneCm|fishCaught|flowerPotted|flyOneCm|furnaceInteraction|hopperInspected|horseOneCm|itemEnchanted|jump|junkFished|leaveGame|minecartOneCm|mobKills|noteblockPlayed|noteblockTuned|pigOneCm|playerKills|playOneMinute|recordPlayed|sneakTime|sprintOneCm|swimOneCm|talkedToVillager|timeSinceDeath|sleepInBed|tradedWithVillager|trappedChestTriggered|treasureFished|walkOneCm))\b'
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: constant.numeric}
    - match: '\b(stat\.((?:craft|use|break)Item|pickup|drop)\.(?:(\w+)\.(\w+)|(\w+)))\b'
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: constant.language.mcc}
        '3': {name: support.type.mcc}
        '4': {name: constant.numeric.mcc}
        '5': {name: constant.numeric.mcc}
    - match: '\b(stat\.(killEntity|entityKilledBy)\.((?:chest|commandblock|furnace|hopper|spawner|tnt)_|(?:minecart)|(?:(?:skeleton|zombie)_|)(?:horse)|(?:illusion|evocation|vindication)_illager|(?:zombie)(?:_(?:pigman|villager)|)|area_effect_cloud|armor_stand|arrow|bat|blaze|boat|cave_spider|chicken|cow|creeper|donkey|dragon_fireball|egg|elder_guardian|ender_(?:pearl|crystal|dragon)|enderman|endermite|eye_of_ender_signal|falling_block|fireball|fireworks_rocket|ghast|giant|guardian|husk|item_frame|item|leash_knot|magma_cube|mooshroom|mule|ocelot|painting|pig|polar_bear|potion|rabbit|sheep|shulker_bullet|shulker|silverfish|skeleton_horse|skeleton|slime|small_fireball|snowball|snowman|spectral_arrow|spider|squid|stray|tnt|vex|villager_golem|villager|witch|wither_skeleton|wither|wolf|xp_(?:bottle|orb)))\b'
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: constant.language.mcc}
        '3': {name: support.type.mcc}
    - match: '\b((?:teamkill|killedByTeam)\.((?:dark_)?(?:blue|green|aqua|red|purple|gray)|black|gold|light_purple|yellow|white))\b'
      captures:
        '1': {name: string.unquoted.mcc}
        '2': {name: constant.language.mcc}

  entity-selector:
    patterns:
    #This is the selecter where there are no keys used
    - match: '(@[apers])(\[)(?:(-?\d+),\s*)?(?:(-?\d+),\s*)?(?:(-?\d+),\s*)?(-?\d+\s*)(])'
      captures:
        '1': {name: entity.name.function.mcc}
        '2': {name: entity.name.function.mcc}
        '3': {name: support.type.mcc}
        '4': {name: support.type.mcc}
        '5': {name: support.type.mcc}
        '6': {name: support.type.mcc}
        '7': {name: entity.name.function.mcc}
    #This section highlights the entity selector when there are keys involved
    - begin: '(\@[apers])(\[)(?:(-?\d+),\s*)?(?:(-?\d+),\s*)?(?:(-?\d+),\s*)?'
      beginCaptures:
        '1': {name: entity.name.function.mcc}
        '2': {name: entity.name.function.mcc}
        '3': {name: support.type.mcc}
        '4': {name: support.type.mcc}
        '5': {name: support.type.mcc}
      patterns:
      - match: '(d?[xyz]|[rl]m?|c|score_([0-z]{1,16})(?:_min)?)(=)(-?\d+),?'
        captures:
          '1': {name: string.unquoted.mcc}
          '2': {name: support.type.mcc}
          '3': {name: keyword.operator.assignment.mcc}
          '4': {name: support.type.mcc}
      - match: '(m)(=!?)([0-3]|-1),?'
        captures:
          '1': {name: string.unquoted.mcc}
          '2': {name: keyword.operator.assignment.mcc}
          '3': {name: support.type.mcc}
      - match: '(r[xy]m?)(=)(-?\d+(?:\.\d+)?),?'
        captures:
          '1': {name: string.unquoted.mcc}
          '2': {name: keyword.operator.assignment.mcc}
          '3': {name: support.type.mcc}
      - match: '(name)(=!?)([\w-]+),?'
        captures:
          '1': {name: string.unquoted.mcc}
          '2': {name: keyword.operator.assignment.mcc}
          '3': {name: support.type.mcc}
      - match: '(team|tag)(=!?)([\w-]+),?'
        captures:
          '1': {name: string.unquoted.mcc}
          '2': {name: keyword.operator.assignment.mcc}
          '3': {name: support.type.mcc}
      - match: '(team)(=),?' #This is here because team= is valid
        captures:
          '1': {name: string.unquoted.mcc}
          '2': {name: keyword.operator.assignment.mcc}
      - match: '(type)(=!?)(llamas|evocation_fangs|lightning_bolt|llama_spit|parrot|player|(?:chest|commandblock|furnace|hopper|spawner|tnt)_|(?:minecart)|(?:(?:skeleton|zombie)_|)(?:horse)|(?:illusion|evocation|vindication)_illager|(?:zombie)(?:_(?:pigman|villager)|)|area_effect_cloud|armor_stand|arrow|bat|blaze|boat|cave_spider|chicken|cow|creeper|donkey|dragon_fireball|egg|elder_guardian|ender_(?:pearl|crystal|dragon)|enderman|endermite|eye_of_ender_signal|falling_block|fireball|fireworks_rocket|ghast|giant|guardian|husk|item_frame|item|leash_knot|magma_cube|mooshroom|mule|ocelot|painting|pig|polar_bear|potion|rabbit|sheep|shulker_bullet|shulker|silverfish|skeleton_horse|skeleton|slime|small_fireball|snowball|snowman|spectral_arrow|spider|squid|stray|tnt|vex|villager_golem|villager|witch|wither_skeleton|wither|wolf|xp_(?:bottle|orb)),?'
        captures:
          '1': {name: string.unquoted.mcc}
          '2': {name: keyword.operator.assignment.mcc}
          '3': {name: support.type.mcc}
      - include: '#err-chars'
      end: '(\])'
      endCaptures:
        '1': {name: entity.name.function.mcc}
    #Highlights your basic entity selector
    - match: '(@[aeprs]|\*)[^\[]'
      captures:
        '1': {name: entity.name.function.mcc}

  json-string:
    patterns:
    - match: '((?:((?:\\\\)*\\\")(?:[^\\\"]|\\\2|\\[^\"])*\2)|(?:((?:\\\\)*\")(?:[^\\\"]|\\.)*\3)),?'
      captures:
        '1': {name: string.quoted.mcc}

  operators:
    patterns:
    - match: '(#\w+)'
      captures:
        '1': {name: constant.string.mcc}
    - name: keyword.operator.assignment.mcc
      match: '[-+/*%^]?='

  number:
    patterns:
    - match: '\b(~?-?\d*(?:\.\d+)?)\b'
      name: constant.numeric.mcc

  json-err:
    patterns:
    - match: '(((?:\\+)?\")(?:text|insertion|title|author|translates|selector|color|bold|italic|underline|strikethrough|obfuscated|with|extra|type|hoverEvent|action|value|clickEvent|score|name|objective|pages|Pos|Motion|direction|power|Body|(?:Left|Right)(?:Arm|Leg)|Head|Rotation|FallDistance|damage|Push[XZ]|FallHurtAmount|DurationOnUse|Radius(?:OnUse|PerTick)?|ItemDropChance|T[XYZ]D|progress|Amount|[xz]|rot|Fire|Air|Dimension|PortalCooldown|UUIDMost|UUIDLeast|EggLayTime|InLove|Age|ForcedAge|ExplosionRadius|Fuse|DragonPhase|carried(?:Data)?|Life[tT]ime|Temper|Type|Variant|SkeletonTrapTime|ExplosionPower|Size|CatType|ConversionTime|(?:Villager)?Profession|Anger|RabbitType|MoreCarrotTicks|Color|Peek|AttachFace|AP[XYZ]|SkeletonType|Riches|Career(?:Level)?|(?:max)?Uses|Invul|CollarColor|[xyz]Tile|in|shake|inData|pickup|life|[Ii]d|Amplifier|Duration|life|Age|Health|PickupDelay|Count|Damage|Value|Display(?:Data|Offset)|LootTableSeed|Fuel|Weight|Spawn(?:Count|Range)|Delay|(?:Min|Max)SpawnDelay|MaxNearbyEntities|RequiredPlayerRange|TNTFuse|TransferCooldown|TileID|Data|Time|FallHurtMax|ReapplicationDelay|WaitTime|DisabledSlots|(?:Tile)?[X-Z]|Type|Flight|Facing|ItemRotation|[Litp]|Steps|Base|Levels|Primary|Secondary|BrewTime|Fuel|OutputSignal|(?:Burn|Cook)Time|CookTimeTotal|note|block(?:Id|Data)|facing|Record|SkullType|Rot|Slot|lvl|RepairCost|Operation|color|HideFlags|generation|timestamp|type|OnGround|Invulnerable|CustomNameVisible|Silent|Glowing|BatFlags|IsChickenJockey|Powered|ignited|PlayerSpawned|Bred|ChestedHorse|EatingHaystack|HasReproduced|Tame|Saddle|SkeletonTrap|Elder|wasOnGround|IsBaby|CanBreakDoors|Sheared|Willing|rewardExp|PlayerCreated|Angry|player|inGround|Ambient|ShowParticles|CustomDisplayTile|Enabled|TrackOutput|DropItem|HurtEntities|Marker|Invisible|NoBasePlate|Gravity|ShowArms|Small|ShowBottom|Flicker|Trail|powered|auto|ExactTeleport|extending|Unbreakable|resolved|isPublic|map_is_scaling|CustomName|(?:Affected(?:Blocks|Entities|Items)|QueryResult|SuccessCount)(?:Objective|Name)|OwnerName|OwnerUUID|HurtBy|inTile|Potion|Owner|Thrower|Type|DisplayTile|LootTable|EntityId|Command|LastOutput|Block|Particle|Motive|id?|Pattern|Lock|Item|Text[1-4]|ExtraType|Signature|Value|AttributeName|Name|Slot|SkullOwner|profileId|profileName|url|Passengers|Tags|CommandStats|Items?|ArmorItems?|SaddleItem|Inventory|Offers|Recipes|buyB?|sell|tag|CustomPotionEffects|Potion|SpawnPotentials|Properties|SpawnData|TileEntityData|Effects|[0-4]|Equipment|HandItems|Pose|BeamTarget|FireworksItem|Explosions?|Fireworks|Colors|FadeColors|Owner|Target|Patterns|ExitPortal|RecordItem|Textures|CanDestroy|CanPlaceOn|ench|StoredEnchantments|AttributeModifiers|display|Lore|SkullOwner|textures|Value|SKIN|CAPE|EntityTag|Decorations)\2)\s*:'
      name: invalid.illegal

  string:
    patterns:
    - match: '("(?:[^\\\"]|(\\.))*")'
      captures:
        '1': {name: string.quoted.mcc}
        '2': {name: constant.character.escape}

  err-chars: # If {} or [] or " or : characters are matched at this point that means they arent in a json array so make em bold and obvious
    patterns:
    - match: '[\[\]\{\}:\"\\,=]'
      name: invalid.illegal
...